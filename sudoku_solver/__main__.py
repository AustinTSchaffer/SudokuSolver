BEGINNER = [
    [0, 4, 2, 3, 0, 1, 7, 0, 0],
    [0, 0, 7, 9, 5, 6, 4, 2, 8],
    [5, 6, 0, 7, 2, 4, 0, 1, 0],
    [8, 9, 0, 0, 4, 0, 0, 0, 7],
    [2, 0, 0, 6, 9, 7, 0, 8, 3],
    [1, 7, 6, 2, 0, 8, 9, 4, 5],
    [0, 8, 9, 5, 1, 2, 6, 3, 4],
    [4, 3, 1, 8, 0, 0, 0, 7, 2],
    [6, 2, 5, 4, 0, 3, 8, 0, 1],
]

EASY = [
    [4, 5, 9, 1, 7, 3, 2, 8, 6],
    [3, 0, 1, 6, 8, 0, 0, 0, 0],
    [0, 0, 6, 5, 0, 9, 0, 0, 1],
    [6, 3, 4, 2, 9, 0, 5, 7, 0],
    [5, 0, 0, 8, 0, 0, 3, 0, 0],
    [8, 1, 7, 0, 0, 4, 6, 0, 0],
    [1, 4, 0, 7, 3, 6, 0, 0, 9],
    [0, 0, 0, 9, 0, 5, 0, 0, 0],
    [0, 6, 3, 0, 0, 0, 1, 0, 7],
]

MEDIUM = [
    [5, 6, 1, 3, 0, 0, 0, 0, 2],
    [0, 3, 0, 5, 9, 6, 0, 1, 0],
    [0, 7, 0, 0, 0, 2, 3, 0, 0],
    [0, 5, 9, 0, 6, 0, 0, 0, 0],
    [6, 8, 0, 0, 0, 5, 0, 3, 1],
    [0, 0, 4, 0, 0, 9, 0, 0, 0],
    [0, 0, 3, 6, 1, 0, 0, 0, 7],
    [0, 0, 6, 0, 5, 0, 2, 0, 3],
    [7, 0, 0, 0, 0, 0, 1, 0, 0],
]

HARD = [
    [0, 9, 4, 0, 0, 8, 0, 0, 7],
    [0, 0, 6, 5, 1, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 4, 0, 2, 5],
    [7, 0, 0, 0, 0, 3, 0, 0, 8],
    [0, 0, 0, 0, 9, 1, 0, 7, 0],
    [0, 4, 0, 0, 0, 0, 9, 0, 6],
    [0, 8, 3, 4, 0, 0, 0, 0, 0],
    [4, 0, 0, 0, 0, 0, 0, 0, 1],
    [0, 6, 0, 0, 0, 0, 8, 0, 0],
]

EXTREME = [
    [0, 0, 9, 0, 0, 7, 0, 4, 0],
    [0, 7, 1, 0, 2, 0, 0, 0, 5],
    [0, 4, 0, 0, 0, 0, 0, 3, 9],
    [0, 0, 0, 0, 0, 8, 0, 0, 0],
    [0, 0, 0, 4, 6, 0, 0, 0, 0],
    [0, 0, 2, 1, 9, 0, 8, 0, 0],
    [0, 6, 0, 0, 0, 0, 4, 0, 0],
    [0, 9, 0, 2, 8, 6, 5, 0, 0],
    [5, 0, 0, 0, 0, 0, 0, 0, 0],
]

SAMPLE_STARTING_POSITIONS = [
    ("Beginner", BEGINNER),
    ("Easy", EASY),
    ("Medium", MEDIUM),
    ("Hard", HARD),
    ("Extreme", EXTREME),
]

import sudoku_solver

def main():
    for (SP_RANK, SP) in SAMPLE_STARTING_POSITIONS:
        sudoku = sudoku_solver.sudoku.SudokuPuzzle(SP)

        print("{} Starting Position:".format(SP_RANK))
        print(sudoku)

        solver = sudoku_solver.cnpp_solver.NumberPlacementPuzzleSolver()
        solver.solve(sudoku)

        print("Solved:")
        print(sudoku)

if __name__ == "__main__":
    main()
